var storedComponent=[{"ComponentValue":"{\u0022componentname\u0022:\u0022column\u0022}","ComponentID":"9"},{"ComponentValue":"{\u0022componentname\u0022:\u0022login form\u0022,\u0022view\u0022:{\u0022view\u0022:\u0022function () {\\r\\n var $form = $(\u0027#divLoginMainForm\u0027);\\r\\n if (SageFrameUserName === \u0027\u0027)\\r\\n $form.removeClass(\u0027Dn tDn mDn\u0027);\\r\\n else\\r\\n $(\u0027#divAlreadyLogin\u0027).removeClass(\u0027Dn mDn tDn\u0027);\\r\\n var objUrl = GetSearchQuery();\\r\\n $(\u0027#divReqVerToken\u0027).html($(\u0027input:hidden[name=\\\u0022__RequestVerificationToken\\\u0022]\u0027)[0].outerHTML);\\r\\n\\r\\n $(\u0027#hdnReturnURL\u0027).val(objUrl.returnurl);\\r\\n this.getExternalLogin();\\r\\n this.eventListener($form);\\r\\n this.validation($form);\\r\\n this.initCaptcha(objUrl);\\r\\n }\u0022,\u0022getExternalLogin\u0022:\u0022function () {\\r\\n var conf = {\\r\\n type: \u0027GET\u0027,\\r\\n async: true,\\r\\n url: \u0027/account/GetExternalLogin\u0027,\\r\\n success: function (data) {\\r\\n var btnOID = $(\u0027#dvOpenIDField\u0027).find(\u0027.oIdBtn\u0027)[0].outerHTML;\\r\\n var btnHTML = \u0027\u0027;\\r\\n if (data.length \u003E 0) {\\r\\n var rtnURL = $(\u0027#hdnReturnURL\u0027).val();\\r\\n $(\u0027#dvOpenIDField\u0027).removeClass(\u0027Dn tDn mDn\u0027);\\r\\n $.each(data, function (i, v) {\\r\\n var $btnOID = $(btnOID);\\r\\n $btnOID.attr(\u0027data-provider\u0027, v.LoginProvider);\\r\\n $btnOID.find(\u0027img\u0027).attr(\u0027src\u0027, v.ProviderLogo);\\r\\n if (!EditorMode) {\\r\\n var url = \u0027/account/externallogin?provider=\u0027 \u002B v.LoginProvider \u002B \u0027\u0026returnurl=\u0027\u002BrtnURL \\r\\n $btnOID.attr(\u0027href\u0027, url);\\r\\n }\\r\\n btnHTML \u002B= $btnOID[0].outerHTML;\\r\\n });\\r\\n $(\u0027#divOpenIDBtnWrp\u0027).html(btnHTML);\\r\\n }\\r\\n }\\r\\n }\\r\\n SecureAjaxCall.Call(conf);\\r\\n }\u0022,\u0022validation\u0022:\u0022function ($pr) {\\r\\n var self = this;\\r\\n $pr.find(\u0027.requiredFld\u0027).on(\u0027keyup\u0027, function () {\\r\\n let $this = $(this);\\r\\n $this.next(\u0027.sfError\u0027).remove();\\r\\n if ($this.val() === \u0027\u0027) {\\r\\n $this.after(\u0027\u003Cspan class=\\\u0022sfError\\\u0022\u003ERequired Field\u003C/span\u003E\u0027);\\r\\n }\\r\\n else if ($this.attr(\u0027data-email\u0027) === \u0027true\u0027 \u0026\u0026 !self.validEmail($this.val())) {\\r\\n $this.after(\u0027\u003Cspan class=\\\u0022sfError\\\u0022\u003EInvalid Email\u003C/span\u003E\u0027);\\r\\n } else {\\r\\n $this.next(\u0027.sfError\u0027).remove();\\r\\n }\\r\\n });\\r\\n }\u0022,\u0022validEmail\u0022:\u0022function (email) {\\r\\n var reg = /^(([^\u003C\u003E()[\\\\]\\\\\\\\.,;:\\\\s@\\\\\\\u0022]\u002B(\\\\.[^\u003C\u003E()[\\\\]\\\\\\\\.,;:\\\\s@\\\\\\\u0022]\u002B)*)|(\\\\\\\u0022.\u002B\\\\\\\u0022))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\])|(([a-zA-Z\\\\-0-9]\u002B\\\\.)\u002B[a-zA-Z]{2,}))$/;\\r\\n return reg.test(email);\\r\\n }\u0022,\u0022validateForm\u0022:\u0022function ($pr) {\\r\\n var self = this;\\r\\n $pr.find(\u0027.sfError\u0027).remove();\\r\\n var valid = true;\\r\\n $pr.find(\u0027.requiredFld:visible\u0027).each(function () {\\r\\n var $inp = $(this);\\r\\n\\r\\n if ($inp.val() === \u0027\u0027) {\\r\\n $inp.after(\u0027\u003Cspan class=\\\u0022sfError\\\u0022\u003ERequired Field\u003C/span\u003E\u0027);\\r\\n valid = false;\\r\\n } else if ($inp.attr(\u0027data-email\u0027) === \u0027true\u0027 \u0026\u0026 !self.validEmail($inp.val())) {\\r\\n $inp.after(\u0027\u003Cspan class=\\\u0022sfError\\\u0022\u003EInvalid Email\u003C/span\u003E\u0027);\\r\\n valid = false;\\r\\n }\\r\\n\\r\\n });\\r\\n return valid;\\r\\n }\u0022,\u0022eventListener\u0022:\u0022function ($pr) {\\r\\n var self = this;\\r\\n $pr.find(\u0027#btnSignIn\u0027).off(\u0027click\u0027).on(\u0027click\u0027, function (e) {\\r\\n if (!self.validateForm($pr)) {\\r\\n e.preventDefault();\\r\\n }\\r\\n });\\r\\n $pr.find(\u0027#hypLnkCountinue\u0027).off(\u0027click\u0027).on(\u0027click\u0027, function (e) {\\r\\n window.history.back();\\r\\n });\\r\\n \\r\\n }\u0022,\u0022initCaptcha\u0022:\u0022function (p) {\\r\\n if (p.captcha === \u0027true\u0027) {\\r\\n try {\\r\\n $(\u0027#LoginCaptchaWrap\u0027).removeClass(\u0027Dn\u0027);\\r\\n $(\u0027#LoginCaptcha\u0027).contentdercaptcha({\\r\\n type: p.type,\\r\\n siteKey: SitePublicKey,\\r\\n secretKey: \u0027ss\u0027\\r\\n });\\r\\n } catch{\\r\\n console.error(\u0027Captcha not working\u0027);\\r\\n }\\r\\n }\\r\\n }\u0022}}","ComponentID":"1501"},{"ComponentValue":"{\u0022componentname\u0022:\u0022row\u0022,\u0022common\u0022:{\u0022heightInit\u0022:\u0022function () {\\r\\n $(\u0027#adJustHeight\u0027).off().on(\u0027click\u0027, function () {\\r\\n if ($(this).is(\u0027:checked\u0027)) {\\r\\n $(\u0027#autoheightAdjustRow\u0027).prop(\u0027checked\u0027, false);\\r\\n let parentClasses = $activeDOM.attr(\u0027class\u0027);\\r\\n let dAlpha = DeviceAlphaSpace();\\r\\n let regex = new RegExp(dAlpha \u002B \u0027H-[0-9]{1,4}\u0027, \u0027g\u0027);\\r\\n let rowHeightClass = parentClasses.match(regex);\\r\\n if (rowHeightClass !== null) {\\r\\n $activeDOM.removeClass(rowHeightClass[0]);\\r\\n }\\r\\n $activeDOM.css({ \u0027height\u0027: \u0027\u0027 });\\r\\n $activeDOM.removeClass(dAlpha \u002B \u0027fullpagebanner\u0027).addClass(dAlpha \u002B \u0027adjustheight\u0027);\\r\\n $(\u0027#adjustHeaderHolder\u0027).fadeIn(400);\\r\\n var rowHeight = $activeDOM.css(\u0027height\u0027).replace(\u0027px\u0027, \u0027\u0027);\\r\\n $activeDOM.addClass(dAlpha \u002B \u0027H-\u0027 \u002B rowHeight);\\r\\n ChangeSliderValue($(\u0027#rowHeightSlider\u0027), rowHeight);\\r\\n } else {\\r\\n let parentClasses = $activeDOM.attr(\u0027class\u0027);\\r\\n let dAlpha = DeviceAlphaSpace();\\r\\n let regex = new RegExp(dAlpha \u002B \u0027H-[0-9]{1,4}\u0027, \u0027g\u0027);\\r\\n let rowHeightClass = parentClasses.match(regex);\\r\\n if (rowHeightClass !== null) {\\r\\n $activeDOM.removeClass(rowHeightClass[0]);\\r\\n }\\r\\n $activeDOM.removeClass(dAlpha \u002B \u0027adjustheight\u0027);\\r\\n $activeDOM.css({ \u0027height\u0027: \u0027\u0027 });\\r\\n $(\u0027#adjustHeaderHolder\u0027).fadeOut(400);\\r\\n // AdjustSizeFullpage($activeDOM);\\r\\n }\\r\\n });\\r\\n RowHeight();\\r\\n function RowHeight() {\\r\\n let $parent = $activeDOM;\\r\\n function rowHeightChange(space) {\\r\\n ReplaceClassByPattern($parent, \u0027H-[0-9]{1,4}\u0027, \u0027H-\u0027 \u002B space);\\r\\n }\\r\\n AdvanceSageSlider($(\u0027#rowHeightSlider\u0027), $(\u0027#rowHeightHandle\u0027), 30, 1080,\\r\\n GetValueByClassName($parent, \u0027H-[0-9]{1,4}\u0027, \u0027H-\u0027), rowHeightChange, $parent, \u0027px\u0027);\\r\\n }\\r\\n }\u0022},\u0022resize\u0022:\u0022function () {\\r\\n AdjustSizeFullpage();\\r\\n }\u0022}","ComponentID":"63"}];